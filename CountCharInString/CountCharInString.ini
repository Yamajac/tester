[Rainmeter]
Update = -1
DynamicWindowSize = 1

[Variables]
CharToCount = T

[RandomNumber]
Measure = Calc
UpdateRandom = 1
HighBound = 2147483647
Formula = Random 

[DoIt]
Measure = String
DynamicVariables=1
String = TestStringForTesting
RegExpSubstitute = 1
Substitute = "[^#CharToCount#]" : ""


; We get the number of characters by replacing all the characters that aren't the one we want
; Then drawing the string of characters we want in a string meter
; With a REALLY BIG FONT SIZE that's offset way the hell in the top left
; and a monospaced font
; Then we take the width of that meter, subtract the approximate padding 
; and divide it by the approximate width of each character
; Then we run the Ceil function to bring it up to the nearest whole number
; Since this formula will slowly subtract like 0.03 or something per character
; It's basically the hackiest thing I've ever made.
[CountIt]
Measure = Calc
DynamicVariables = 1
Formula = Ceil((([Count:W] - 450) / 832))



[Number]
Meter = String
Text = [RandomNumber]
DynamicVariables = 1
Group = Counting
Y = 30

[Count]
Meter = String
Text = [DoIt]
DynamicVariables = 1
FontFace = BPDots
FontSize = 1000
InLinePattern = (.*)
InLineSetting = CharacterSpacing | 0 | 0 | 0
Y = -1000000000
X = -1000000000
Padding = 0,0,0,0

[ShowIt]
Meter = String
Text = Number of #CharToCount#s: [CountIt]
DynamicVariables = 1
Y = 50
Group = Counting

[ReGenNumber]
Meter = String
Text = REGEN
FontSize = 13
SolidColor = 0,0,0,1
LeftMouseUpAction = [!UpdateMeasure RandomNumber][!UpdateMeasure DoIt][!UpdateMeter Count][!UpdateMeasure CountIt][!UpdateMeasureGroup Counting][!UpdateMeterGroup Counting][!Redraw]

